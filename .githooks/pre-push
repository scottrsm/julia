#!/bin/bash

## Get the top level directory of the repo.
repo_top=$(git rev-parse --show-toplevel)

## Configuration Parameters for this script.
JULIA_EXEC=julia
MODULES="$repo_top/pkgs/*"
TEST_DIR="test"
TEST_RUN_SCRIPT="runtests.jl"


## ASCII colors.
red='\033[0;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[0;34m'
no_color='\033[0m'

## 1. ANNOUNCE THE RUNNING OF REPO TESTS.
echo -e "\n${blue}Running pre-push hook for REPO: ${yellow}\"${repo_top}\"${no_color}"


## 2. RUN MODULE TESTS...
## Loop over all modules...
for module in $MODULES; do

    ## Check module directory structure...
    ## Need module to be a directory with a test subdirectory and a runscript.
    if [[ ! -d $module ]]; then
        echo -e "${red}ERROR: \"$module\" is NOT a directory.${no_color}"
        exit 1
    fi
    if [[ ! -d $module/$TEST_DIR ]]; then
        echo -e "${red}ERROR: \"$module/$TEST_DIR\" is NOT a directory.${no_color}"
        exit 2
    fi
    if [[ ! -f $module/$TEST_DIR/$TEST_RUN_SCRIPT ]]; then
        echo -e "${red}\"$module/$TEST_DIR/$TEST_RUN_SCRIPT\" does NOT exist.${no_color}"
        exit 3
    fi

    ### Move to the module directory.
    cd "$module" || exit 10

    ## Run the tests for this module.
    ok=$($JULIA_EXEC --project "$TEST_DIR/$TEST_RUN_SCRIPT")
    cmd_status=$?

    ## If any test failed, error -- leave with non-zero exit status 
    ## THIS MEANS THAT THIS PRE-PUSH HOOK WILL FAIL.
    if [[ $cmd_status -ne 0 ]]; then
        echo -e "\n${red}ERROR: Some tests failed. All tests must pass before push to remote is allowed!\n${no_color}"
        echo -e "${red}Details of Failure:\n${no_color}"
        echo -e "$ok"
        exit 4
    else # Otherwise, announce module success.
        module_base_name=$(basename "$module")
        echo -e "\n\n${green}${module_base_name}: Tests passed!\n${no_color}"
        x=$(echo -e "  "${ok} | sed 's/|/\n\t/g')
        echo -e "${yellow}$x${no_color}"
    fi
done


### 3. FINISH (if we get this far...)
echo -e "\n\n---------------------------------------------------------"
echo -e "---------  ${green}Git \"PRE-PUSH\" hook was SUCCESSFUL!${no_color}  ---------"
echo -e "---------------------------------------------------------\n"

## PRE-PUSH HOOK SUCCESSFULL.
exit 0

