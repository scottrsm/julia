#!/bin/bash

## Get the top level directory of the repo.
repo_top=$(git rev-parse --show-toplevel)

## Configuration Parameters for this script.
JULIA_EXEC=julia
MODULES="$repo_top/pkgs/*"
TEST_DIR="test"
TEST_RUN_SCRIPT="runtests.jl"


## ASCII colors.
red='\033[0;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[0;34m'
no_color='\033[0m'

## 1. ANNOUNCE THE RUNNING OF REPO TESTS.
echo -e "\n${blue}Running pre-push hook for REPO: ${yellow}\"${repo_top}\"\n${no_color}"


## 2. RUN MODULE TESTS...
## Loop over all modules...
for module in $MODULES; do

    ## Run the tests for each module.
    ok=$($JULIA_EXEC --project=@. "$module/$TEST_DIR/$TEST_RUN_SCRIPT")
    cmd_status=$?

    ## If bad status, error --leave with non-zero exit status (pre-push hook failed).
    if [[ $cmd_status -ne 0 ]]; then
        echo -e "\n${red}ERROR - Tests must pass before push!\n${no_color}"
        exit 1
    else # Otherwise, announce module success.
        module_base_name=$(basename "$module")
        echo -e "\n\n${blue} ${module_base_name}: Tests passed!\n${no_color}"
        echo -e "${yellow} $ok"
    fi
done


### 3. FINISH
echo -e "\n\n--------------------------------------------------------"
echo -e "---------  ${green}Git \"PRE-PUSH\" hook was SUCCESSFUL!${no_color}  ---------"
echo -e "--------------------------------------------------------\n"

## Exit successfully
exit 0

